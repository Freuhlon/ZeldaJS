{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/images/map-90.png","webpack:///./src/assets/images/map.png","webpack:///./src/assets/images/character.png","webpack:///./src/state/actions.js","webpack:///./src/utils/sprite.js","webpack:///./src/game/direction.js","webpack:///./src/game/character/character.js","webpack:///./src/state/reducer.js","webpack:///./src/state/redux.js","webpack:///./src/game/land/tree-type.js","webpack:///./src/game/village/tile-position.js","webpack:///./src/game/land/tree.js","webpack:///./src/game/land/grass-type.js","webpack:///./src/game/land/grass.js","webpack:///./src/game/land/cliff-type.js","webpack:///./src/game/land/cliff.js","webpack:///./src/game/land/mountain-bottom.js","webpack:///./src/game/land/mountain-top.js","webpack:///./src/game/land/sea-type.js","webpack:///./src/game/land/sea.js","webpack:///./src/game/house/wall-type.js","webpack:///./src/game/house/roof-type.js","webpack:///./src/game/house/door-type.js","webpack:///./src/game/house/house.js","webpack:///./src/game/land/sand-type.js","webpack:///./src/game/land/sand.js","webpack:///./src/game/land/rim-type.js","webpack:///./src/game/land/rim.js","webpack:///./src/game/land/rock-type.js","webpack:///./src/game/land/rock.js","webpack:///./src/game/village/stair-type.js","webpack:///./src/game/village/stair.js","webpack:///./src/game/village/sign.js","webpack:///./src/game/village/dale-type.js","webpack:///./src/game/village/dale.js","webpack:///./src/game/village/statue-type.js","webpack:///./src/game/village/statue.js","webpack:///./src/game/village/post.js","webpack:///./src/game/village/well.js","webpack:///./src/game/house/telephone.js","webpack:///./src/game/land/game.js","webpack:///./src/index.js","webpack:///./src/utils/keyboard.js","webpack:///./src/menus/title.js","webpack:///./src/menus/menu.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Action","UP","DOWN","LEFT","RIGHT","ENTER","LOAD_GAME","freeze","this","mapImage","Image","src","mapImage90","characterImage","DIRECTION","first","x","y","second","direction","page","frame","offsetX","offsetY","speed","subscribe","getState","map","canvasContext","ctx","drawImage","character","getFrame","mapPositionX","Math","trunc","mapPositionY","console","log","checkChangePage","initPage","initialState","walls","currentScreenCode","listeners","dispatch","action","state","type","move","reducer","forEach","listener","push","filter","lis","TreeType","SHADOW_BLUE","SHADOW_BROWN","LIGHT_DRY","LIGHT_HAIRY","LIGHT_BROWN","TilePosition","TOP_LEFT","TOP_MIDDLE","TOP_RIGHT","MIDDLE_LEFT","MIDDLE_MIDDLE","MIDDLE_RIGHT","BOTTOM_LEFT","BOTTOM_MIDDLE","BOTTOM_RIGHT","ANIMATED","tilePosition","GrassType","SHADOW","SHADOW_HEIGHT","SHADOW_SHORT","LIGHT","LIGHT_HEIGHT","LIGHT_RELIEF","LIGHT_STRAIGHT90","LIGHT_STRAIGHT","CUTABLE_DRY","map90","CliffType","position","SeaType","WallType","WALL_BROWN_WINDOW","WALL_GREY_WINDOW","WALL_ROCK","RoofType","ROOF_TILE_VIOLET","ROOF_TILE_RED","ROOF_TILE_BLUE","STRONG_BLUE","STRONG_VIOLET","ROCK","RED_SHOP","VIOLET_SHOP","DoorType","DOOR_GREY","DOOR_WOOD","DOOR_FOREST","SandType","PATH","RimType","EXTREME_LEFT","MIDDLE_DRY","EXTREME_RIGHT","RockType","StairType","VILLAGE","DaleType","StatueType","CHICKEN","code","tileFrame","cptFrame","squareSize","with","height","render","canvas","document","getElementById","width","screenWidth","screenHeight","fillStyle","fillRect","tree","grass","cliff","mountainBottom","mountainTop","sea","house","sand","rim","rock","stair","sign","dale","statue","post","well","telephone","x1","y1","getContext","keys","up","down","left","right","space","enter","escape","handledKeys","that","addEventListener","e","keyCode","currentScreen","super","font","fillText","currentPage","step","update","requestAnimationFrame","metrics","computedWidth","computedHeight","stretch","body","offsetWidth","offsetHeight","style","window"],"mappings":"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K,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAM,GAAI,IAAK,IAAK,IAAM,GAAI,IAAM,GAAK,GAAK,GAAK,GAAI,IAAK,IAAK,IAAM,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAM,GAAI,IAAK,IAAK,IAAM,GAAI,IAAM,GAAK,GAAK,GAAK,GAAI,IAAK,IAAK,IAAM,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAK,GAAI,IAAM,GAAI,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAM,GAAI,IAAK,IAAK,IAAM,GAAI,IAAM,GAAK,GAAK,GAAK,GAAI,IAAM,GAAI,IAAM,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAM,GAAK,GAAK,GAAI,IAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAI,IAAK,IAAK,IAAM,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAI,IAAK,IAAK,IAAK,IAAM,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAI,IAAM,GAAI,IAAM,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAM,GAAI,IAAK,IAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAM,GAAK,GAAK,GAAK,GAAK,GAAI,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAM,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAM,GAAK,GAAK,GAAK,GAAK,GAAI,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAI,IAAM,GAAI,IAAK,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAM,GAAI,IAAK,IAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAI,IAAK,IAAK,IAAM,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,IACxL,CAAE,GAAI,GAAI,IAAM,GAAI,IAAM,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAI,IAAM,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAM,GAAI,IAAM,GAAI,IAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IACxL,CAAE,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAM,GAAI,IAAM,GAAI,IAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,G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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = __webpack_public_path__ + \"assets/images/map-90.png\";","module.exports = __webpack_public_path__ + \"assets/images/map.png\";","module.exports = __webpack_public_path__ + \"assets/images/character.png\";","export const Action = {\n    UP: \"UP\",\n    DOWN: \"DOWN\",\n    LEFT: \"LEFT\",\n    RIGHT: \"RIGHT\",\n    ENTER: \"ENTER\",\n    LOAD_GAME: \"LOAD_GAME\"\n};\n\nObject.freeze(Action);\n","import map90 from '../assets/images/map-90.png';\nimport map from '../assets/images/map.png';\nimport character from '../assets/images/character.png';\n\nexport class Sprite {\n\n    static map() {\n        if(this.mapImage) {\n            return this.mapImage;\n        }\n        this.mapImage = new Image();\n        this.mapImage.src = map;\n\n        return this.mapImage;\n    }\n\n    static map90() {\n        if(this.mapImage90) {\n            return this.mapImage90;\n        }\n        this.mapImage90 = new Image();\n        this.mapImage90.src = map90;\n\n        return this.mapImage90;\n    }\n\n    static character() {\n        if(this.characterImage) {\n            return this.characterImage;\n        }\n        this.characterImage = new Image();\n        this.characterImage.src = character;\n\n        return this.characterImage;\n    }\n\n}\n","export const DIRECTION = {\n    DOWN: {\n        first: {\n            x: 37,\n            y: 35\n        },\n        second: {\n            x: 51,\n            y: 35\n        }\n    },\n    LEFT: {\n        first: {\n            x: 7,\n            y: 35\n        },\n        second: {\n            x: 21,\n            y: 35\n        }\n    },\n    RIGHT: {\n        first: {\n            x: 94,\n            y: 35\n        },\n        second: {\n            x: 109,\n            y: 35\n        }\n    },\n    UP: {\n        first: {\n            x: 66,\n            y: 35\n        },\n        second: {\n            x: 80,\n            y: 35\n        }\n    }\n};\n\nObject.freeze(DIRECTION);\n","import {Sprite} from \"../../utils/sprite\";\nimport {DIRECTION} from \"../direction\";\nimport {getState, subscribe} from \"../../state/redux\";\n\nexport class Character {\n\n    constructor(x, y, direction, page) {\n        this.x = x;\n        this.y = y;\n        this.direction = direction;\n        this.frame = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.speed = 3;\n\n        this.page = page;\n\n        subscribe(() => {\n            this.page = getState().page;\n            this.map = getState().map;\n        })\n\n    }\n\n    render(canvasContext) {\n        canvasContext.ctx.drawImage(\n            Sprite.character(),\n            this.getFrame(this.direction).x,\n            this.getFrame(this.direction).y,\n            13,\n            16,\n            16 * this.x + this.offsetX,\n            16 * this.y + this.offsetY,\n            13,\n            16\n        );\n    }\n\n    checkChangePage() {\n\n        if (16 * this.x + this.offsetX < -6) {\n            this.page = {\n                x: this.page.x,\n                y: this.page.y - 1\n            }\n            this.offsetX = this.offsetX + 160\n            return;\n\n        }\n\n        if (16 * this.x + this.offsetX > 150) {\n            this.page = {\n                x: this.page.x,\n                y: this.page.y + 1\n            }\n            this.offsetX = this.offsetX - 160\n            return;\n        }\n\n        if (16 * this.y + this.offsetY > 120) {\n            this.page = {\n                x: this.page.x + 1,\n                y: this.page.y\n            }\n            this.offsetY = this.offsetY - 135;\n            return;\n        }\n\n        if (16 * this.y + this.offsetY < -12) {\n            this.page = {\n                x: this.page.x - 1,\n                y: this.page.y\n            }\n            this.offsetY = this.offsetY + 135;\n            return;\n\n        }\n\n\n    }\n\n    getFrame(direction) {\n        if (this.frame === 0) {\n            this.frame = 1;\n            return direction.first;\n        } else if (this.frame === 1) {\n            this.frame = 0;\n            return direction.second;\n        }\n    }\n\n    move(direction) {\n\n\n        let mapPositionX = Math.trunc((this.offsetX) / 16 + this.x);\n        let mapPositionY = Math.trunc((this.offsetY) / 16 + this.y);\n        console.log(mapPositionX, mapPositionY)\n            //, this.map[(8 * (mapPositionX - 1))][(10 * (mapPositionY - 1))])\n        this.direction = direction;\n        this.frame = this.frame === 1 ? 0 : 1;\n        switch (direction) {\n            case DIRECTION.UP:\n                this.offsetY = this.offsetY - this.speed;\n                this.checkChangePage();\n                break;\n            case DIRECTION.DOWN:\n                this.offsetY = this.offsetY + this.speed;\n                this.checkChangePage();\n                break;\n            case DIRECTION.LEFT:\n                this.offsetX = this.offsetX - this.speed;\n                this.checkChangePage();\n                break;\n            case DIRECTION.RIGHT:\n                this.offsetX = this.offsetX + this.speed;\n                this.checkChangePage();\n                break;\n        }\n\n        return this.page;\n\n\n    }\n}\n","import {Action} from \"./actions\";\nimport {Character} from \"../game/character/character\";\nimport {DIRECTION} from \"../game/direction\";\n\nconst map = [\n    [  3,  5,   6,   4,  12,  13,  13, 18,  3,  5, 47,  45,  44,  45,  44,  45,  44, 45, 42, 47, 46, 47,  46,  47,  46,  47,  46,  47,  46,  47,  46,  47,  46,  47,  46,  47, 46, 47, 46, 47],\n    [ 24,  3,   4,  32,  15,  13,  31, 31,  1,  6, 45,  63,  64,  64,  65,  62,  62, 62, 44, 46, 47, 45,  44,  45,  44,  45,  44,  45,  44,  45,  44,  45,  44,  45,  44,  45, 44, 45, 44, 45],\n    [ 27,  1,   2,  32,  32,  15,  18, 31,  3,  5, 43,  66,  72,  72,  68,  61,  61, 61, 42, 47, 45, 83,  50,  52,  86,  87,  87,  87,  88,  50,  52,  98,  98,  98,  50,  51, 59, 51, 51, 51],\n    [ 27,  3,   4,   1,   2,  32,  15, 31,  1,  6, 45,  66,  72,  72,  39,  65,  60, 60, 44, 46, 43, 83,  56,  55,  89,  90,  90,  90,  91,  53,  55,  97,  99,  97,  53,  54, 54, 54, 54, 57],\n    [ 39, 24,   1,   6,   5,   2,  32,  1,  6,  5, 43,  66,  72,  72,  72,  68,  56, 59, 42, 47, 45, 83,  83,  56,  61,  84,  61,  84,  61,  56,  59, 100,  77, 100,  53,  54, 54, 54, 55, 42],\n    [ 33, 27,   3,   5,   6,   4,  32,  3,  5,  6, 45,  69,  70,  70,  70,  71,  77, 82, 44, 46, 43, 92,  65,  83,  59,  85,  85,  85,  85,  85,  85,  85, 100,  50,  59,  54, 54, 54, 55, 44],\n    [ 33, 27,   1,   6,   5,   2,  32,  1,  6,  5, 43,  56,  54,  59,  58,  77,  50, 55, 42, 47, 45, 50,  68,  83,  83,  83,  83,  56,  59,  51,  52,  85,  50,  58,  63,  96, 53, 59, 55, 42],\n    [ 41, 27,   3,   5,   6,   4,  32,  3,  5,  6, 46,  43,  53,  55,  77,  77,  53, 55, 44, 46, 43, 53,  39,  64,  64,  64,  64,  64,  94,  64,  64, 101,  64,  64,  40,  50, 54, 54, 55, 44],\n    [ 72, 68,  42,  47,  46,  43,  77, 42, 47, 46, 47,  45,  53,  58,  77,  50,  54, 58, 42, 47, 45, 53,  33, 104, 104, 104, 104, 104, 104, 104, 104, 101, 104, 104,  34,  53, 54, 54, 55, 42],\n    [ 72, 68,  44,  46,  47,  45,  77, 44, 46, 47, 45,  50,  58,  77,  50,  54,  55, 77, 44, 46, 43, 82, 103, 103, 103, 103, 103, 103, 103,  53,  55,  85,  53,  57,  57,  57, 59, 54, 58, 44],\n    [ 72, 68,  42,  47,  45,  60,  83, 77, 44, 46, 43,  82,  42,  43,  56,  59,  54, 52, 77, 44, 45, 82, 103, 103,  59,  59,  59, 103, 103,  53,  55,  85,  58,  83,  83,  83, 56, 85, 85, 85],\n    [ 72, 68,  44,  45,  60,  58,  77, 77, 42, 47, 45,  82,  44,  45,  77,  56,  57, 54, 52, 42, 43, 82, 103,  59, 103, 105, 103,  59, 103,  53,  55,  85,  83, 108, 109, 110,  83, 85, 50, 42],\n    [ 72, 68,  42,  43,  60,  77,  77, 77, 44, 46, 43,  53,  52,  77,  77,  42,  43, 53, 55, 44, 45, 82, 103,  59, 103, 106, 103,  59, 103,  53,  55,  85,  83, 111, 112, 113,  83, 85, 55, 44],\n    [ 72, 68,  44,  45,  54, 102,  77, 50, 42, 47, 45,  53,  59,  52,  77,  44,  45, 53, 58, 42, 43, 82, 103,  59, 103, 103, 103,  59, 103,  56,  56,  85,  83, 107,  99, 107,  83, 85, 55, 42],\n    [ 72, 68,  42,  43,  53,  52,  85, 59, 44, 46, 43,  56,  57,  58,  77,  50,  51, 58, 42, 47, 45, 82, 103, 103,  59,  59,  59, 103, 103,  85,  85,  85,  85,  85,  85,  85,  85, 85, 55, 44],\n    [ 72, 68,  44,  45,  53,  54,  85, 60, 42, 47, 46,  43,  42,  43,  50,  54,  55, 42, 47, 46, 43, 82, 103, 103, 103, 103, 103, 103, 103,  50,  50,  51,  51,  51,  51,  51,  51, 51, 55, 42],\n    [ 72, 68,  42,  43,  53,  55,  85, 60, 44, 45, 44,  45,  44,  45,  60,  60,  60, 44, 45, 44, 45, 53, 116, 116, 116, 116, 116, 116, 116,  54,  60,  60,  60,  60,  60,  60,  60, 60, 60, 44],\n    [ 72, 68,  44,  45,  56,  58,  85, 85, 85, 85, 85,  85, 118, 119, 120,  60,  54, 51, 51, 51, 51, 55, 114, 114, 114, 114, 114, 114, 114,  53,  60,  60,  60,  60,  60,  60,  60, 60, 60, 42],\n    [ 72, 68,  92,  65,  83,  83,  83, 63, 96, 50, 52,  85, 121, 122, 123, 117,  56, 59, 54, 54, 54, 55, 114,  60,  60,  60,  60,  42,  43,  60,  60,  60,  83,  83,  83,  83,  83, 83, 60, 44],\n    [ 72, 68,  52,  39,  64,  94,  64, 40, 83, 53, 55,  85, 107,  99, 107,  99, 114, 60, 54, 54, 54, 59, 114,  60, 124, 124, 124,  44,  45,  60,  60,  60,  83,  83,  83,  83,  83, 83, 60, 42],\n    [ 72, 68,  55,  33, 104, 104, 104, 34, 51, 59, 55,  85,  85,  85,  85,  60,  60, 60, 60, 54, 54, 55, 114,  60,  61,  84,  61,  60, 114,  53,  60,  60,  83,  83,  83,  83,  83, 83, 60, 44],\n    [ 72, 68,  53,  52, 114, 115, 114, 56, 57, 57, 57, 116,  59,  60,  60,  60,  60, 60, 54, 54, 54, 55, 114,  60,  60,  85,  60,  60, 114,  53,  60,  60,  83,  83,  83,  83,  83, 83, 60, 42],\n    [ 72, 68,  53,  59, 114,  77, 114, 85, 85, 85, 85,  85,  56,  57,  57,  57,  57, 57, 59, 57, 57, 58, 114, 114, 114,  85, 114, 114, 114,  53,  60,  60,  83,  83,  83,  83,  83, 83, 60, 44],\n    [ 72, 68,  53,  54,  51,  51,  52, 85, 50, 42, 43,  85,  85,  85,  85,  85,  85, 85, 85, 85, 85, 85,  85,  85,  85,  85,  50,  51,  51,  54,  60,  60,  60,  60,  60,  60,  60, 60, 60, 42],\n    [ 72, 68,  59,  57,  57,  54,  55, 85, 82, 44, 45,  50,  51,  51,  51,  51,  51, 59, 51, 51, 51, 51, 116, 116, 116, 116,  57,  59,  54,  54,  60,  60,  60,  60,  60,  60,  60, 60, 60, 44],\n    [ 72, 68, 117, 117, 117,  53,  55, 85, 82, 42, 43,  56,  54,  59,  54,  54,  57, 57, 54, 54, 54, 55, 103, 103, 103, 103, 103, 103, 103,  53,  54,  54,  54,  58,  83,  83,  83, 56, 63, 64],\n    [ 72, 68, 107,  99, 107,  56,  58, 85, 82, 44, 45,  98,  97,  97,  97,  97,  97, 98, 53, 54, 59, 55, 103, 125, 125, 125, 125, 125, 103,  53,  54,  54,  55,  83, 131, 132, 133, 83, 66, 72],\n    [ 72, 68,  52,  77,  77,  77,  85, 85, 59, 42, 43,  97,  60,  86, 115,  88,  60, 97, 54, 59, 54, 55, 103, 125,  42, 127,  43, 125, 103,  53,  54,  54,  55,  83, 128, 129, 130, 83, 66, 72],\n    [ 72, 68,  54,  51,  52,  85,  85, 77, 83, 44, 45,  50,  60,  89,  90,  91,  60, 54, 54, 54, 54, 55, 103, 125,  44, 126,  45, 125, 103,  53,  54,  59,  55,  83,  61,  84,  61, 83, 66, 72],\n    [ 72, 68,  53,  54,  55,  85,  50, 52, 83, 42, 43,  56,  60,  61,  84,  61,  60, 54, 54, 54, 54, 55, 103, 125, 125, 125, 125, 125, 103,  53,  54,  54,  55,  83,  77,  77,  77, 83, 66, 72],\n    [ 72, 68,  56,  57,  55,  85,  53, 58, 42, 47, 46,  43,  56,  58,  77,  56,  57, 57, 59, 57, 57, 59, 103, 103, 103, 103, 103, 103, 103,  56,  57,  57,  57,  52,  83,  83,  42, 43, 66, 72],\n    [ 72, 68,  42,  43,  82,  85,  82, 42, 47, 46, 47,  46,  43,  42,  43,  42,  43, 42, 43, 42, 43, 42,  43,  42,  43,  42,  43,  42,  43,  42,  43,  42,  43,  42,  43,  42,  47, 45, 69, 70],\n];\n\nconst initPage =  {\n    x: 3,\n    y: 3\n};\n\nconst initialState = {\n    map: null,\n    character: null,\n    walls: [],\n    currentScreenCode: 'TITLE',\n    page: null\n};\n\nfunction reducer(action, state = initialState) {\n    switch (action.type) {\n        case Action.UP:\n            return {\n                ...state,\n                page: state.character.move(DIRECTION.UP)\n            };\n        case Action.DOWN:\n            return {\n                ...state,\n                page: state.character.move(DIRECTION.DOWN)\n            };\n        case Action.LEFT: {\n            return {\n                ...state,\n                page: state.character.move(DIRECTION.LEFT)\n            };\n        }\n        case Action.RIGHT: {\n            return {\n                ...state,\n                page: state.character.move(DIRECTION.RIGHT)\n            };\n        }\n        case Action.ENTER: {\n            if (state.currentScreenCode === 'TITLE') {\n                return {\n                ...state,\n                    map: map,\n                    character: new Character(5, 5, DIRECTION.DOWN),\n                    page: initPage,\n                    currentScreenCode: 'GAME'\n                }\n            } else {\n                return {\n                    ...state,\n                };\n            }\n        }\n        case Action.LOAD_GAME: {\n            return {\n                ...state,\n                map: map,\n                character: new Character(5, 5, DIRECTION.DOWN),\n                page: initPage\n            }\n        }\n    }\n}\n\nexport {reducer};\n","import {reducer} from \"./reducer\";\n\nconst listeners = [];\n\nlet state;\nconst getState = () => state;\n\nconst dispatch = action => {\n    state = reducer(action, state);\n    listeners.forEach(listener => listener())\n};\n\nconst subscribe = (listener) => {\n    listeners.push(listener);\n    return () => listeners.filter(lis => lis !== listener)\n};\n\nexport {getState, dispatch, subscribe};\n","export const TreeType = {\n    SHADOW_BLUE: 'SHADOW_BLUE',\n    SHADOW_BROWN: 'SHADOW_BROWN',\n    LIGHT_DRY: 'LIGHT_DRY',\n    LIGHT_HAIRY: 'LIGHT_HAIRY',\n    LIGHT_BROWN: 'LIGHT_BROWN'\n}\n\nObject.freeze(TreeType);\n","export const TilePosition = {\n    TOP_LEFT: 'TOP_LEFT',\n    TOP_MIDDLE: 'TOP_MIDDLE',\n    TOP_RIGHT: 'TOP_RIGHT',\n    MIDDLE_LEFT: 'MIDDLE_LEFT',\n    MIDDLE_MIDDLE: 'MIDDLE_MIDDLE',\n    MIDDLE_RIGHT: 'MIDDLE_RIGHT',\n    BOTTOM_LEFT: 'BOTTOM_LEFT',\n    BOTTOM_MIDDLE: 'BOTTOM_MIDDLE',\n    BOTTOM_RIGHT: 'BOTTOM_RIGHT',\n    ANIMATED: 'ANIMATED'\n}\n\nObject.freeze(TilePosition);\n","import {Sprite} from \"../../utils/sprite\";\nimport {TreeType} from \"./tree-type\";\nimport {TilePosition} from \"../village/tile-position\";\n\nexport class Tree {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, type, tilePosition) {\n        switch (type) {\n            case TreeType.SHADOW_BLUE:\n                switch (tilePosition) {\n                    case TilePosition.BOTTOM_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 19 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 20 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 19 - 16, 17 * 11 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 20 - 16, 17 * 11 - 16, 16, 16, 16 * y, 16 * x, 16, 16)\n                        break;\n                }\n                break;\n            case TreeType.SHADOW_BROWN:\n                switch (tilePosition) {\n                    case TilePosition.TOP_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 21 - 16, 17 * 11 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 22 - 16, 17 * 11 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 21 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n                break;\n            case TreeType.LIGHT_DRY:\n                switch (tilePosition) {\n                    case TilePosition.TOP_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 9 - 16, 17 * 8 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 10 - 16, 17 * 8 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 9 - 16, 17 * 9 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 10 - 16, 17 * 9 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n                break;\n            case TreeType.LIGHT_HAIRY:\n                switch (tilePosition) {\n                    case TilePosition.TOP_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 9 - 16, 17 * 7 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 10 - 16, 17 * 7 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n                break;\n            case TreeType.LIGHT_BROWN:\n                switch (tilePosition) {\n                    case TilePosition.TOP_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 9 - 16, 17 * 6 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 10 - 16, 17 * 6 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n                break;\n        }\n\n    }\n}\n","export const GrassType = {\n    SHADOW: 'SHADOW',\n    SHADOW_HEIGHT: 'SHADOW_HEIGHT',\n    SHADOW_SHORT: 'SHADOW_SHORT',\n    LIGHT: 'LIGHT',\n    LIGHT_HEIGHT: 'LIGHT_HEIGHT',\n    LIGHT_RELIEF: 'LIGHT_RELIEF',\n    LIGHT_STRAIGHT90: 'LIGHT_STRAIGHT90',\n    LIGHT_STRAIGHT: 'LIGHT_STRAIGHT',\n    CUTABLE_DRY: 'CUTABLE_DRY',\n};\n\nObject.freeze(GrassType);\n","import {TilePosition} from \"../village/tile-position\";\nimport {Sprite} from \"../../utils/sprite\";\nimport {GrassType} from \"./grass-type\";\n\nexport class Grass {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, type, tilePosition, frame) {\n\n        switch (type) {\n            case GrassType.SHADOW:\n                switch (tilePosition) {\n                    case TilePosition.MIDDLE_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 19 - 16, 17 * 14 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.MIDDLE_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 20 - 16, 17 * 14 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 19 - 16, 17 * 15 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.ANIMATED:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), ((17 + frame) * 17 )- 16, 17 * 17 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n                break;\n            case GrassType.LIGHT:\n                switch (tilePosition) {\n                    case TilePosition.TOP_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 1 - 16, 17 * 6 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 2 - 16, 17 * 6 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 3 - 16, 17 * 6 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.MIDDLE_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 1 - 16, 17 * 7 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.MIDDLE_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 2 - 16, 17 * 7 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.MIDDLE_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 3 - 16, 17 * 7 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 1 - 16, 17 * 8 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 2 - 16, 17 * 8 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 3 - 16, 17 * 8 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break\n                    case TilePosition.ANIMATED:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), ((17 + frame) * 17 )- 16, 17 * 16 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n                break;\n            case GrassType.LIGHT_RELIEF:\n                switch (tilePosition) {\n                    case TilePosition.TOP_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 4 - 16, 17 * 9 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 5 - 16, 17 * 9 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 6 - 16, 17 * 9 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.MIDDLE_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 4 - 16, 17 * 10 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.MIDDLE_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 5 - 16, 17 * 10 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.MIDDLE_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 6 - 16, 17 * 10 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 4 - 16, 17 * 11 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 5 - 16, 17 * 11 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 6 - 16, 17 * 11 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break\n                }\n                break;\n            case GrassType.SHADOW_HEIGHT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 24 - 16, 17 * 9 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case GrassType.SHADOW_SHORT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 23 - 16, 17 * 8 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case GrassType.LIGHT_HEIGHT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 14 - 16, 17 * 10 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case GrassType.LIGHT_STRAIGHT90:\n                this.canvasContext.ctx.drawImage(Sprite.map90(), 17 * 14 - 16, 17 * 7 - 15, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case GrassType.LIGHT_STRAIGHT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 18 - 16, 17 * 14 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case GrassType.CUTABLE_DRY:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 14 - 16, 17 * 11 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n        }\n    }\n}\n","export const CliffType = {\n    SHADOW: 'SHADOW',\n    LIGHT: 'LIGHT'\n}\n\nObject.freeze(CliffType);\n","import {TilePosition} from \"../village/tile-position\";\nimport {Sprite} from \"../../utils/sprite\";\nimport {CliffType} from \"./cliff-type\";\n\nexport class Cliff {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, type, tilePosition) {\n        switch (type) {\n            case CliffType.SHADOW:\n                switch (tilePosition) {\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 21 - 16, 17 * 8 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.MIDDLE_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 21 - 16, 17 * 9 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 19 - 16, 17 * 10 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n                break;\n            case CliffType.LIGHT:\n                switch (tilePosition) {\n                    case TilePosition.TOP_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 1 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 2 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 3 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.MIDDLE_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 1 - 16, 17 * 13 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.MIDDLE_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 2 - 16, 17 * 13 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.MIDDLE_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 3 - 16, 17 * 13 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 1 - 16, 17 * 14 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 2 - 16, 17 * 14 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 3 - 16, 17 * 14 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n        }\n    }\n\n}\n","import {Sprite} from \"../../utils/sprite\";\nimport {TilePosition} from \"../village/tile-position\";\n\nexport class MountainBottom {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, position) {\n        switch (position) {\n            case TilePosition.TOP_LEFT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 4 - 16, 17 * 14 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case TilePosition.BOTTOM_MIDDLE:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 6 - 16, 17 * 13 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case TilePosition.BOTTOM_RIGHT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 5 - 16, 17 * 15 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case TilePosition.BOTTOM_LEFT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 4 - 16, 17 * 15 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n        }\n\n    }\n\n}\n","import {TilePosition} from \"../village/tile-position\";\nimport {Sprite} from \"../../utils/sprite\";\n\nexport class MountainTop {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, position) {\n        switch (position) {\n            case TilePosition.BOTTOM_LEFT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 4 - 16, 17 * 13 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case TilePosition.TOP_LEFT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 5 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case TilePosition.BOTTOM_RIGHT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 5 - 16, 17 * 13 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n        }\n\n    }\n}\n","export const SeaType = {\n    SHADOW: \"SHADOW\",\n    LIGHT: \"LIGHT\"\n};\n\nObject.freeze(SeaType);\n","import {Sprite} from \"../../utils/sprite\";\nimport {SeaType} from \"./sea-type\";\n\nexport class Sea {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, type, frame) {\n        switch (type) {\n            case SeaType.SHADOW:\n                this.canvasContext.ctx.drawImage(Sprite.map(), (21 + frame) * 17 - 16, 17 * 21 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case SeaType.LIGHT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), (21 + frame) * 17 - 16, 17 * 18 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n        }\n\n    }\n\n}\n","export const WallType = {\n    WALL_BROWN_WINDOW: 'WALL_BROWN_WINDOW',\n    WALL_GREY_WINDOW: 'WALL_GREY_WINDOW',\n    WALL_ROCK: 'WALL_ROCK'\n}\n\nObject.freeze(WallType);\n","export const RoofType = {\n    ROOF_TILE_VIOLET: 'ROOF_TILE_VIOLET',\n    ROOF_TILE_RED: 'ROOF_TILE_RED',\n    ROOF_TILE_BLUE: 'ROOF_TILE_BLUE',\n    STRONG_BLUE: 'STRONG_BLUE',\n    STRONG_VIOLET: 'STRONG_VIOLET',\n    ROCK: 'ROCK',\n    RED_SHOP: 'RED_SHOP',\n    VIOLET_SHOP: 'VIOLET_SHOP'\n}\n\nObject.freeze(RoofType);\n","export const DoorType = {\n    DOOR_GREY: 'DOOR_GREY',\n    DOOR_WOOD: 'DOOR_WOOD',\n    DOOR_FOREST: 'DOOR_FOREST'\n}\n\nObject.freeze(DoorType);\n","import {Sprite} from \"../../utils/sprite\";\nimport {WallType} from \"./wall-type\";\nimport {RoofType} from \"./roof-type\";\nimport {DoorType} from \"./door-type\";\nimport {TilePosition} from \"../village/tile-position\";\n\nexport class House {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, type, tilePosition) {\n        switch (type) {\n            case DoorType.DOOR_WOOD:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 4 - 16, 17 * 3 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case DoorType.DOOR_FOREST:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 15 - 16, 17 * 5 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case RoofType.ROCK:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 6 - 16, 17 * 3 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case WallType.WALL_ROCK:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 5 - 16, 17 * 3 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case WallType.WALL_BROWN_WINDOW:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 2 - 16, 17 * 3 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case WallType.WALL_GREY_WINDOW:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 1 - 16, 17 * 3 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case RoofType.ROOF_TILE_VIOLET:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 11 - 16, 17 * 3 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case RoofType.ROOF_TILE_RED:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 8 - 16, 17 * 3 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case RoofType.ROOF_TILE_BLUE:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 9 - 16, 17 * 3 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case DoorType.DOOR_GREY:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 3 - 16, 17 * 3 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case RoofType.STRONG_BLUE:\n\n                switch (tilePosition) {\n                    case TilePosition.TOP_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 1 - 16, 17 * 1 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 2 - 16, 17 * 1 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 3 - 16, 17 * 1 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 1 - 16, 17 * 2 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 2 - 16, 17 * 2 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 3 - 16, 17 * 2 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n                break;\n            case RoofType.STRONG_VIOLET:\n\n                switch (tilePosition) {\n                    case TilePosition.TOP_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 4 - 16, 17 * 1 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 5 - 16, 17 * 1 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 6 - 16, 17 * 1 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 4 - 16, 17 * 2 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 5 - 16, 17 * 2 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 6 - 16, 17 * 2 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n                break;\n            case RoofType.RED_SHOP:\n                switch (tilePosition) {\n                    case TilePosition.TOP_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 22 - 16, 17 * 1 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 23 - 16, 17 * 1 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 24 - 16, 17 * 1 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 22 - 16, 17 * 2 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 23 - 16, 17 * 2 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 24 - 16, 17 * 2 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n                break;\n            case RoofType.VIOLET_SHOP:\n                switch (tilePosition) {\n\n                    case TilePosition.TOP_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 7 - 16, 17 * 1 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 8 - 16, 17 * 1 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.TOP_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 9 - 16, 17 * 1 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_LEFT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 7 - 16, 17 * 2 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 8 - 16, 17 * 2 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_RIGHT:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 9 - 16, 17 * 2 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n                break;\n        }\n\n    }\n}\n","export const SandType = {\n    PATH: 'PATH',\n}\n\nObject.freeze(SandType);\n","import {Sprite} from \"../../utils/sprite\";\nimport {SandType} from \"./sand-type\";\n\nexport class Sand {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, type) {\n        switch (type) {\n            case SandType.PATH:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 17 - 16, 17 * 14 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n        }\n\n    }\n}\n","export const RimType = {\n    EXTREME_LEFT: 'EXTREME_LEFT',\n    LEFT: 'LEFT',\n    MIDDLE_DRY: 'MIDDLE_DRY',\n    RIGHT: 'RIGHT',\n    EXTREME_RIGHT: 'EXTREME_RIGHT'\n}\n\nObject.freeze(RimType);\n","import {Sprite} from \"../../utils/sprite\";\nimport {RimType} from \"./rim-type\";\n\nexport class Rim {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, type) {\n        switch (type) {\n            case RimType.EXTREME_LEFT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 6 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case RimType.LEFT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 7 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case RimType.MIDDLE_DRY:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 8 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case RimType.RIGHT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 11 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case RimType.EXTREME_RIGHT:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 12 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n        }\n\n    }\n}\n","export const RockType = {\n    DRY: 'DRY'\n}\n","import {Sprite} from \"../../utils/sprite\";\nimport {RockType} from \"./rock-type\";\n\nexport class Rock {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, type) {\n        switch (type) {\n            case RockType.DRY:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 17 - 16, 17 * 9 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n        }\n\n    }\n}\n","export const StairType = {\n    VILLAGE: 'VILLAGE'\n}\n\nObject.freeze(StairType);\n","import {Sprite} from \"../../utils/sprite\";\nimport {StairType} from \"./stair-type\";\n\nexport class Stair {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, type) {\n        switch (type) {\n            case StairType.VILLAGE:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 13 - 16, 17 * 15 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n        }\n\n    }\n}\n","import {Sprite} from \"../../utils/sprite\";\n\nexport class Sign {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y) {\n        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 19 - 16, 17 * 7 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n    }\n}\n","export const DaleType = {\n    GREY: 'GREY',\n    RED: 'RED'\n}\n","import {Sprite} from \"../../utils/sprite\";\nimport {DaleType} from \"./dale-type\";\n\nexport class Dale {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, type) {\n        switch (type) {\n            case DaleType.GREY:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 17 - 16, 17 * 12 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n            case DaleType.RED:\n                this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 21 - 16, 17 * 3 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                break;\n        }\n    }\n}\n","export const StatueType = {\n    CHICKEN: 'CHICKEN'\n}\n\nObject.freeze(StatueType);\n","import {Sprite} from \"../../utils/sprite\";\nimport {StatueType} from \"./statue-type\";\nimport {TilePosition} from \"./tile-position\";\n\nexport class Statue {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y, type, tilePosition, frame) {\n\n\n        switch (type) {\n            case StatueType.CHICKEN:\n\n                switch (tilePosition) {\n                    case TilePosition.TOP_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), ((13 + frame) * 17 )- 16, 17 * 13 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                    case TilePosition.BOTTOM_MIDDLE:\n                        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 13 - 16, 17 * 14 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n                        break;\n                }\n                break;\n        }\n    }\n}\n","import {Sprite} from \"../../utils/sprite\";\n\nexport class Post {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y) {\n        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 11 - 16, 17 * 14 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n    }\n}\n","import {Sprite} from \"../../utils/sprite\";\n\nexport class Well {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y) {\n        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 7 - 16, 17 * 3 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n    }\n}\n","import {Sprite} from \"../../utils/sprite\";\n\nexport class Telephone {\n    constructor(canvasContext) {\n        this.canvasContext = canvasContext;\n    }\n\n    render(x, y) {\n        this.canvasContext.ctx.drawImage(Sprite.map(), 17 * 15 - 16, 17 * 4 - 16, 16, 16, 16 * y, 16 * x, 16, 16);\n    }\n}\n","import {Tree} from \"./tree\";\nimport {TreeType} from \"./tree-type\";\nimport {TilePosition} from \"../village/tile-position\";\nimport {Grass} from \"./grass\";\nimport {GrassType} from \"./grass-type\";\nimport {CliffType} from \"./cliff-type\";\nimport {Cliff} from \"./cliff\";\nimport {MountainBottom} from \"./mountain-bottom\";\nimport {MountainTop} from \"./mountain-top\";\nimport {SeaType} from \"./sea-type\";\nimport {Sea} from \"./sea\";\nimport {House} from \"../house/house\";\nimport {WallType} from \"../house/wall-type\";\nimport {RoofType} from \"../house/roof-type\";\nimport {DoorType} from \"../house/door-type\";\nimport {Sand} from \"./sand\";\nimport {SandType} from \"./sand-type\";\nimport {Rim} from \"./rim\";\nimport {RimType} from \"./rim-type\";\nimport {RockType} from \"./rock-type\";\nimport {Rock} from \"./rock\";\nimport {Stair} from \"../village/stair\";\nimport {StairType} from \"../village/stair-type\";\nimport {Sign} from \"../village/sign\";\nimport {Dale} from \"../village/dale\";\nimport {StatueType} from \"../village/statue-type\";\nimport {Statue} from \"../village/statue\";\nimport {Post} from \"../village/post\";\nimport {Well} from \"../village/well\";\nimport {DaleType} from \"../village/dale-type\";\nimport {Telephone} from \"../house/telephone\";\nimport {getState, subscribe} from \"../../state/redux\";\n\nexport class Game {\n\n\n    constructor(map, walls, page, character) {\n        this.map = map;\n        this.walls = walls;\n        this.character = character;\n        this.code = 'GAME';\n        this.tileFrame = 0;\n        this.cptFrame = 0;\n        this.squareSize = {\n            with: 10,\n            height: 8\n        }\n\n        this.page = page;\n\n        subscribe(() => {\n            this.page = getState().page;\n        })\n\n    }\n\n    update(canvasContext) {\n        this.render(canvasContext);\n    }\n\n    render(canvasContext) {\n\n        const canvas = document.getElementById('canvas');\n        canvas.width = this.squareSize.with * 16;\n        canvas.height = this.squareSize.height * 16;\n\n        canvasContext.screenWidth = canvas.width;\n        canvasContext.screenHeight = canvas.height;\n\n        canvasContext.ctx.fillStyle = \"black\";\n        canvasContext.ctx.fillRect(0, 0, canvasContext.screenWidth, canvasContext.screenHeight);\n\n        this.tree = new Tree(canvasContext);\n        this.grass = new Grass(canvasContext);\n        this.cliff = new Cliff(canvasContext);\n        this.mountainBottom = new MountainBottom(canvasContext);\n        this.mountainTop = new MountainTop(canvasContext);\n        this.sea = new Sea(canvasContext);\n        this.house = new House(canvasContext);\n        this.sand = new Sand(canvasContext);\n        this.rim = new Rim(canvasContext);\n        this.rock = new Rock(canvasContext);\n        this.stair = new Stair(canvasContext);\n        this.sign = new Sign(canvasContext);\n        this.dale = new Dale(canvasContext);\n        this.statue = new Statue(canvasContext);\n        this.post = new Post(canvasContext);\n        this.well = new Well(canvasContext);\n        this.telephone = new Telephone(canvasContext);\n\n        for (let x = (8 * (this.page.x - 1)); x < 8 * this.page.x; x++) { //documenter ce truc\n            for (let y = (10 * (this.page.y - 1)); y < 10 * this.page.y; y++) { //documenter ce truc\n\n                let x1 = x - (8 * (this.page.x - 1));\n                let y1 = y - (10 * (this.page.y - 1));\n\n                switch (this.map[x][y]) {\n                    case 1:\n                        this.tree.render(x1, y1, TreeType.SHADOW_BLUE, TilePosition.TOP_LEFT);\n                        break;\n                    case 2:\n                        this.tree.render(x1, y1, TreeType.SHADOW_BLUE, TilePosition.TOP_RIGHT);\n                        break;\n                    case 3:\n                        this.tree.render(x1, y1, TreeType.SHADOW_BLUE, TilePosition.BOTTOM_LEFT);\n                        break;\n                    case 4:\n                        this.tree.render(x1, y1, TreeType.SHADOW_BLUE, TilePosition.BOTTOM_RIGHT);\n                        break;\n                    case 5:\n                        this.tree.render(x1, y1, TreeType.SHADOW_BROWN, TilePosition.TOP_LEFT);\n                        break;\n                    case 6:\n                        this.tree.render(x1, y1, TreeType.SHADOW_BROWN, TilePosition.TOP_RIGHT);\n                        break;\n                    case 7:\n                        this.tree.render(x1, y1, TreeType.SHADOW_BROWN, TilePosition.BOTTOM_RIGHT);\n                        break;\n                    case 12:\n                        this.grass.render(x1, y1, GrassType.SHADOW, TilePosition.MIDDLE_LEFT);\n                        break;\n                    case 13:\n                        this.grass.render(x1, y1, GrassType.SHADOW, TilePosition.MIDDLE_MIDDLE);\n                        break;\n                    case 15:\n                        this.grass.render(x1, y1, GrassType.SHADOW, TilePosition.BOTTOM_LEFT);\n                        break;\n                    case 18:\n                        this.grass.render(x1, y1, GrassType.SHADOW, TilePosition.ANIMATED, this.tileFrame);\n                        break;\n                    case 24:\n                        this.cliff.render(x1, y1, CliffType.SHADOW, TilePosition.TOP_RIGHT);\n                        break;\n                    case 27:\n                        this.cliff.render(x1, y1, CliffType.SHADOW, TilePosition.MIDDLE_RIGHT);\n                        break;\n                    case 28:\n                        this.cliff.render(x1, y1, CliffType.SHADOW, TilePosition.BOTTOM_LEFT);\n                        break;\n                    case 31:\n                        this.grass.render(x1, y1, GrassType.SHADOW_HEIGHT);\n                        break;\n                    case 32:\n                        this.grass.render(x1, y1, GrassType.SHADOW_SHORT);\n                        break;\n                    case 33:\n                        this.mountainBottom.render(x1, y1, TilePosition.BOTTOM_LEFT);\n                        break\n                    case 34:\n                        this.mountainBottom.render(x1, y1, TilePosition.BOTTOM_RIGHT);\n                        break\n                    case 38:\n                        this.mountainTop.render(x1, y1, TilePosition.TOP_LEFT);\n                        break\n                    case 39:\n                        this.mountainTop.render(x1, y1, TilePosition.BOTTOM_LEFT);\n                        break;\n                    case 40:\n                        this.mountainTop.render(x1, y1, TilePosition.BOTTOM_RIGHT);\n                        break;\n                    case 41:\n                        this.sea.render(x1, y1, SeaType.SHADOW, this.tileFrame);\n                        break;\n                    case 42:\n                        this.tree.render(x1, y1, TreeType.LIGHT_DRY, TilePosition.TOP_LEFT);\n                        break;\n                    case 43:\n                        this.tree.render(x1, y1, TreeType.LIGHT_DRY, TilePosition.TOP_RIGHT);\n                        break;\n                    case 44:\n                        this.tree.render(x1, y1, TreeType.LIGHT_DRY, TilePosition.BOTTOM_LEFT);\n                        break;\n                    case 45:\n                        this.tree.render(x1, y1, TreeType.LIGHT_DRY, TilePosition.BOTTOM_RIGHT);\n                        break;\n                    case 46:\n                        this.tree.render(x1, y1, TreeType.LIGHT_HAIRY, TilePosition.TOP_LEFT);\n                        break;\n                    case 47:\n                        this.tree.render(x1, y1, TreeType.LIGHT_HAIRY, TilePosition.TOP_RIGHT);\n                        break;\n                    case 48:\n                        this.tree.render(x1, y1, TreeType.LIGHT_BROWN, TilePosition.TOP_LEFT);\n                        break;\n                    case 50:\n                        this.grass.render(x1, y1, GrassType.LIGHT, TilePosition.TOP_LEFT);\n                        break;\n                    case 51:\n                        this.grass.render(x1, y1, GrassType.LIGHT, TilePosition.TOP_MIDDLE);\n                        break;\n                    case 52:\n                        this.grass.render(x1, y1, GrassType.LIGHT, TilePosition.TOP_RIGHT);\n                        break;\n                    case 53:\n                        this.grass.render(x1, y1, GrassType.LIGHT, TilePosition.MIDDLE_LEFT);\n                        break;\n                    case 54:\n                        this.grass.render(x1, y1, GrassType.LIGHT, TilePosition.MIDDLE_MIDDLE);\n                        break;\n                    case 55:\n                        this.grass.render(x1, y1, GrassType.LIGHT, TilePosition.MIDDLE_RIGHT);\n                        break;\n                    case 56:\n                        this.grass.render(x1, y1, GrassType.LIGHT, TilePosition.BOTTOM_LEFT);\n                        break;\n                    case 57:\n                        this.grass.render(x1, y1, GrassType.LIGHT, TilePosition.BOTTOM_MIDDLE);\n                        break;\n                    case 58:\n                        this.grass.render(x1, y1, GrassType.LIGHT, TilePosition.BOTTOM_RIGHT);\n                        break;\n                    case 59:\n                        this.grass.render(x1, y1, GrassType.LIGHT, TilePosition.ANIMATED, this.tileFrame);\n                        break;\n                    case 60:\n                        this.grass.render(x1, y1, GrassType.LIGHT_HEIGHT);\n                        break;\n                    case 61:\n                        this.house.render(x1, y1, WallType.WALL_BROWN_WINDOW);\n                        break;\n                    case 62:\n                        this.house.render(x1, y1, RoofType.ROOF_TILE_VIOLET);\n                        break;\n                    case 63:\n                        this.cliff.render(x1, y1, CliffType.LIGHT, TilePosition.TOP_LEFT);\n                        break;\n                    case 64:\n                        this.cliff.render(x1, y1, CliffType.LIGHT, TilePosition.TOP_MIDDLE);\n                        break;\n                    case 65:\n                        this.cliff.render(x1, y1, CliffType.LIGHT, TilePosition.TOP_RIGHT);\n                        break;\n                    case 66:\n                        this.cliff.render(x1, y1, CliffType.LIGHT, TilePosition.MIDDLE_LEFT);\n                        break;\n                    case 67:\n                        this.cliff.render(x1, y1, CliffType.LIGHT, TilePosition.MIDDLE_MIDDLE);\n                        break;\n                    case 68:\n                        this.cliff.render(x1, y1, CliffType.LIGHT, TilePosition.MIDDLE_RIGHT);\n                        break;\n                    case 69:\n                        this.cliff.render(x1, y1, CliffType.LIGHT, TilePosition.BOTTOM_LEFT);\n                        break;\n                    case 70:\n                        this.cliff.render(x1, y1, CliffType.LIGHT, TilePosition.BOTTOM_MIDDLE);\n                        break;\n                    case 71:\n                        this.cliff.render(x1, y1, CliffType.LIGHT, TilePosition.BOTTOM_RIGHT);\n                        break;\n                    case 72:\n                        this.sea.render(x1, y1, SeaType.LIGHT, this.tileFrame);\n                        break;\n                    case 73:\n                        this.grass.render(x1, y1, GrassType.LIGHT_RELIEF, TilePosition.TOP_LEFT);\n                        break;\n                    case 74:\n                        this.grass.render(x1, y1, GrassType.LIGHT_RELIEF, TilePosition.TOP_MIDDLE);\n                        break;\n                    case 75:\n                        this.grass.render(x1, y1, GrassType.LIGHT_RELIEF, TilePosition.TOP_RIGHT);\n                        break;\n                    case 76:\n                        this.grass.render(x1, y1, GrassType.LIGHT_RELIEF, TilePosition.MIDDLE_LEFT);\n                        break;\n                    case 77:\n                        this.grass.render(x1, y1, GrassType.LIGHT_RELIEF, TilePosition.MIDDLE_MIDDLE);\n                        break;\n                    case 78:\n                        this.grass.render(x1, y1, GrassType.LIGHT_RELIEF, TilePosition.MIDDLE_RIGHT);\n                        break;\n                    case 79:\n                        this.grass.render(x1, y1, GrassType.LIGHT_RELIEF, TilePosition.BOTTOM_LEFT);\n                        break;\n                    case 80:\n                        this.grass.render(x1, y1, GrassType.LIGHT_RELIEF, TilePosition.BOTTOM_MIDDLE);\n                        break;\n                    case 81:\n                        this.grass.render(x1, y1, GrassType.LIGHT_RELIEF, TilePosition.BOTTOM_RIGHT);\n                        break;\n                    case 82:\n                        this.grass.render(x1, y1, GrassType.LIGHT_STRAIGHT90);\n                        break;\n                    case 83:\n                        this.grass.render(x1, y1, GrassType.CUTABLE_DRY);\n                        break;\n                    case 84:\n                        this.house.render(x1, y1, DoorType.DOOR_GREY);\n                        break;\n                    case 85:\n                        this.sand.render(x1, y1, SandType.PATH);\n                        break;\n                    case 86:\n                        this.house.render(x1, y1, RoofType.STRONG_BLUE, TilePosition.TOP_LEFT);\n                        break;\n                    case 87:\n                        this.house.render(x1, y1, RoofType.STRONG_BLUE, TilePosition.TOP_MIDDLE);\n                        break;\n                    case 88:\n                        this.house.render(x1, y1, RoofType.STRONG_BLUE, TilePosition.TOP_RIGHT);\n                        break;\n                    case 89:\n                        this.house.render(x1, y1, RoofType.STRONG_BLUE, TilePosition.BOTTOM_LEFT);\n                        break;\n                    case 90:\n                        this.house.render(x1, y1, RoofType.STRONG_BLUE, TilePosition.BOTTOM_MIDDLE);\n                        break;\n                    case 91:\n                        this.house.render(x1, y1, RoofType.STRONG_BLUE, TilePosition.BOTTOM_RIGHT);\n                        break;\n                    case 92:\n                        this.rim.render(x1, y1, RimType.EXTREME_LEFT);\n                        break;\n                    case 93:\n                        this.rim.render(x1, y1, RimType.LEFT);\n                        break;\n                    case 94:\n                        this.rim.render(x1, y1, RimType.MIDDLE_DRY);\n                        break;\n                    case 95:\n                        this.rim.render(x1, y1, RimType.RIGHT);\n                        break;\n                    case 96:\n                        this.rim.render(x1, y1, RimType.EXTREME_RIGHT);\n                        break;\n                    case 97:\n                        this.house.render(x1, y1, WallType.WALL_ROCK);\n                        break;\n                    case 98:\n                        this.house.render(x1, y1, RoofType.ROCK);\n                        break;\n                    case 99:\n                        this.house.render(x1, y1, DoorType.DOOR_WOOD);\n                        break;\n                    case 100:\n                        this.rock.render(x1, y1, RockType.DRY);\n                        break;\n                    case 101:\n                        this.stair.render(x1, y1, StairType.VILLAGE);\n                        break;\n                    case 102:\n                        this.sign.render(x1, y1);\n                        break;\n                    case 103:\n                        this.dale.render(x1, y1, DaleType.GREY);\n                        break;\n                    case 104:\n                        this.mountainBottom.render(x1, y1, TilePosition.BOTTOM_MIDDLE);\n                        break;\n                    case 105:\n                        this.statue.render(x1, y1, StatueType.CHICKEN, TilePosition.TOP_MIDDLE, this.tileFrame);\n                        break;\n                    case 106:\n                        this.statue.render(x1, y1, StatueType.CHICKEN, TilePosition.BOTTOM_MIDDLE);\n                        break;\n                    case 107:\n                        this.house.render(x1, y1, WallType.WALL_GREY_WINDOW);\n                        break;\n                    case 108:\n                        this.house.render(x1, y1, RoofType.RED_SHOP, TilePosition.TOP_LEFT);\n                        break;\n                    case 109:\n                        this.house.render(x1, y1, RoofType.RED_SHOP, TilePosition.TOP_MIDDLE);\n                        break;\n                    case 110:\n                        this.house.render(x1, y1, RoofType.RED_SHOP, TilePosition.TOP_RIGHT);\n                        break;\n                    case 111:\n                        this.house.render(x1, y1, RoofType.RED_SHOP, TilePosition.BOTTOM_LEFT);\n                        break;\n                    case 112:\n                        this.house.render(x1, y1, RoofType.RED_SHOP, TilePosition.BOTTOM_MIDDLE);\n                        break;\n                    case 113:\n                        this.house.render(x1, y1, RoofType.RED_SHOP, TilePosition.BOTTOM_RIGHT);\n                        break;\n                    case 114:\n                        this.post.render(x1, y1);\n                        break;\n                    case 115:\n                        this.well.render(x1, y1);\n                        break;\n                    case 116:\n                        this.grass.render(x1, y1, GrassType.LIGHT_STRAIGHT);\n                        break;\n                    case 117:\n                        this.house.render(x1, y1, RoofType.ROOF_TILE_RED);\n                        break;\n                    case 118:\n                        this.house.render(x1, y1, RoofType.STRONG_VIOLET, TilePosition.TOP_LEFT);\n                        break;\n                    case 119:\n                        this.house.render(x1, y1, RoofType.STRONG_VIOLET, TilePosition.TOP_MIDDLE);\n                        break;\n                    case 120:\n                        this.house.render(x1, y1, RoofType.STRONG_VIOLET, TilePosition.TOP_RIGHT);\n                        break;\n                    case 121:\n                        this.house.render(x1, y1, RoofType.STRONG_VIOLET, TilePosition.BOTTOM_LEFT);\n                        break;\n                    case 122:\n                        this.house.render(x1, y1, RoofType.STRONG_VIOLET, TilePosition.BOTTOM_MIDDLE);\n                        break;\n                    case 123:\n                        this.house.render(x1, y1, RoofType.STRONG_VIOLET, TilePosition.BOTTOM_RIGHT);\n                        break;\n                    case 124:\n                        this.house.render(x1, y1, RoofType.ROOF_TILE_BLUE);\n                        break;\n                    case 125:\n                        this.dale.render(x1, y1, DaleType.RED);\n                        break;\n                    case 126:\n                        this.house.render(x1, y1, DoorType.DOOR_FOREST);\n                        break;\n                    case 127:\n                        this.telephone.render(x1, y1);\n                        break;\n                    case 128:\n                        this.house.render(x1, y1, RoofType.VIOLET_SHOP, TilePosition.BOTTOM_LEFT);\n                        break;\n                    case 129:\n                        this.house.render(x1, y1, RoofType.VIOLET_SHOP, TilePosition.BOTTOM_MIDDLE);\n                        break;\n                    case 130:\n                        this.house.render(x1, y1, RoofType.VIOLET_SHOP, TilePosition.BOTTOM_RIGHT);\n                        break;\n                    case 131:\n                        this.house.render(x1, y1, RoofType.VIOLET_SHOP, TilePosition.TOP_LEFT);\n                        break;\n                    case 132:\n                        this.house.render(x1, y1, RoofType.VIOLET_SHOP, TilePosition.TOP_MIDDLE);\n                        break;\n                    case 133:\n                        this.house.render(x1, y1, RoofType.VIOLET_SHOP, TilePosition.TOP_RIGHT);\n                        break;\n                }\n            }\n\n            this.character.render(canvasContext);\n\n            this.cptFrame = this.cptFrame === 400 ? 0 : this.cptFrame + 1;\n\n            if (this.cptFrame === 30) {\n                this.tileFrame = this.tileFrame === 3 ? 0 : this.tileFrame + 1;\n            }\n        }\n    }\n}\n","import {Keyboard} from \"./utils/keyboard\";\nimport {Game} from \"./game/land/game\";\nimport {dispatch, getState, subscribe} from \"./state/redux\";\nimport {Title} from \"./menus/title\";\nimport {Action} from \"./state/actions\";\n\nconst screenWidth = 800;\nconst screenHeight = 600;\n\nconst canvas = document.getElementById('canvas');\ncanvas.width = screenWidth;\ncanvas.height = screenHeight;\nconst ctx = canvas.getContext('2d');\n\nconst canvasContext = {\n    screenWidth,\n    screenHeight,\n    ctx\n};\n\nconst controller = new Keyboard();\ncontroller.bind();\n\nlet currentScreen = new Title();\nlet currentPage = {};\n\nsubscribe(() => {\n\n    if (currentScreen.code !== getState().currentScreenCode){\n\n        switch (getState().currentScreenCode) {\n            case 'GAME':\n                currentPage = getState().page;\n                currentScreen = new Game(getState().map, getState().walls, getState().page, getState().character);\n                break;\n        }\n    }\n});\n\n// TODO remove\ndispatch({\n    type: Action.ENTER,\n});\n\nconst step = () => {\n    currentScreen.update(canvasContext);\n    requestAnimationFrame(step);\n}\n\nrequestAnimationFrame(step);\n\nconst metrics = {\n    width: 0,\n    height: 0,\n    computedWidth: function () { // computed width\n        return metrics.width;\n    },\n    computedHeight: function () { // computed height\n        return metrics.height;\n    }\n};\n\nconst stretch = () => {\n    metrics.width = document.body.offsetWidth;\n    metrics.height = document.body.offsetHeight;\n    canvas.style.width = metrics.computedWidth() + 'px';\n    canvas.style.height = metrics.computedHeight() + 'px';\n};\n\nstretch();\nwindow.addEventListener('resize', stretch, false);\n","import {dispatch} from \"../state/redux\";\nimport {Action} from \"../state/actions\";\n\nexport class Keyboard {\n\n    constructor() {\n\n        this.keys = {\n            up: 38,\n            down: 40,\n            left: 37,\n            right: 39,\n            space: 32,\n            enter: 13,\n            escape: 27\n        };\n\n        this.handledKeys = [];\n        this.handledKeys[this.keys.up] = false;\n        this.handledKeys[this.keys.down] = false;\n        this.handledKeys[this.keys.left] = false;\n        this.handledKeys[this.keys.right] = false;\n        this.handledKeys[this.keys.space] = false;\n        this.handledKeys[this.keys.enter] = false;\n        this.handledKeys[this.keys.escape] = false;\n    }\n\n    bind() {\n        const that = this;\n        addEventListener(\"keyup\", function (e) {\n            delete that.handledKeys[e.keyCode];\n        }, false);\n\n        addEventListener(\"keydown\", function (e) {\n            if (that.handledKeys[e.keyCode]) {\n                that.handledKeys[e.keyCode] = true;\n            }\n\n            switch (e.keyCode) {\n\n                case that.keys.up:\n                    dispatch({\n                        type: Action.UP,\n                    });\n\n                    break;\n                case that.keys.down:\n                    dispatch({\n                        type: Action.DOWN,\n                    });\n\n                    break;\n                case that.keys.enter:\n                    dispatch({\n                        type: Action.ENTER,\n                    });\n                    break;\n                case that.keys.left:\n                    dispatch({\n                        type: Action.LEFT,\n                    });\n                    break;\n                case that.keys.right:\n                    dispatch({\n                        type: Action.RIGHT,\n                    });\n                    break;\n            }\n\n        }, false);\n    }\n}\n","import {Menu} from \"./menu\";\n\nexport class Title extends Menu {\n\n    constructor() {\n        super();\n        this.code = 'TITLE';\n    }\n\n    render(canvasContext) {\n        super.render(canvasContext);\n        canvasContext.ctx.font = 60 + \"px Bomberman\";\n        canvasContext.ctx.fillStyle = 'white';\n        canvasContext.ctx.fillText(\"Enter\", canvasContext.screenWidth / 2, 330);\n\n    }\n}\n","export class Menu {\n    constructor() {\n    }\n\n    update(canvasContext) {\n        this.render(canvasContext);\n    }\n\n    render(canvasContext) {\n\n    }\n}\n"],"sourceRoot":""}